services:
  postgres:
    image: postgres:16
    container_name: todo-postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d todo"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: todo-backend
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/todo
      PORT: 8787
      NODE_ENV: development
    ports:
      - "8787:8787"
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./prisma:/app/prisma
      - /app/node_modules
      - /app/apps/backend/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "pnpm db:generate && pnpm --filter backend dev"

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: todo-frontend
    environment:
      NODE_ENV: development
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - /app/node_modules
      - /app/apps/frontend/node_modules
    depends_on:
      - backend
    command: pnpm --filter frontend dev

volumes:
  postgres_data:
